{"version":3,"sources":["webpack:///./src/app/auth/register/register-routing.module.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AAEU;AAazD;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAXjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,qEAAiB;qBAC7B;iBACF,CAAC;aACH;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;AChBlC,uiI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAEU;AACmB;AAMtE;IAQE,2BAAsB,WAAwB,EAClC,MAAc,EACd,mBAAwC;QAF9B,gBAAW,GAAX,WAAW,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QARpD,gBAAW,GAAQ;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;SACd,CAAC;IAIsD,CAAC;IAEzD,oCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;aACxC,SAAS,CACV,aAAG;YACD,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,iEAAiE,CAAC,CAAC;QACtG,CAAC,EACD,eAAK;YACH,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACjD,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC3B,GAAG,CAAC,CAAc,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;oBAAnB,IAAM,GAAG;oBACZ,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC3C;gBACD,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA/BU,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;SAEzB,CAAC;yCASmC,gEAAW;YAC1B,sDAAM;YACO,8EAAmB;OAVzC,iBAAiB,CAgC7B;IAAD,wBAAC;CAAA;AAhC6B;;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AAEG;AACa;AACS;AAWlE;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,oDAAY,EAAE,8EAAqB;aACpC;YACD,YAAY,EAAE;gBACZ,qEAAiB;aAClB;YACD,SAAS,EAAE,EAAE;SACd,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"auth-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RegisterComponent\n      }\n    ])\n  ],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"card mx-4\\\">\\n                    <div class=\\\"card-body p-4\\\">\\n                        <h1>Registro</h1>\\n                        <p class=\\\"text-muted\\\">Solicitar registro no sistema</p>\\n\\n                        <form name=\\\"loginForm\\\" (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\">\\n\\n                            <div class=\\\"input-group mb-3\\\">\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"icon-user\\\"></i></span>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"credentials.firstName\\\" required minlength=\\\"5\\\" maxlength=\\\"20\\\"\\n                                       #firstName=\\\"ngModel\\\">\\n                            </div>\\n\\n                            <div *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"firstName.errors.required\\\">\\n                                    Nome deve ser preenchido\\n                                </div>\\n                                <div *ngIf=\\\"firstName.errors.minlength\\\">\\n                                    Nome deve conter mais de 5 letras\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"input-group mb-3\\\">\\n                                <span class=\\\"input-group-addon\\\">@</span>\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"credentials.username\\\" required #email=\\\"ngModel\\\" pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\\\">\\n                            </div>\\n\\n                            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                Email deve seguir o formato <i>admin@demoiselle.org</i>.\\n                            </div>\\n\\n                            <div class=\\\"input-group mb-3\\\">\\n                                <span class=\\\"input-group-addon\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\" required validateEqual=\\\"repassword\\\"\\n                                       reverse=\\\"true\\\" #password=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"20\\\">\\n                            </div>\\n\\n                            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"password.errors.required\\\">\\n                                    Senha deve ser preenchida\\n                                </div>\\n                                <div *ngIf=\\\"password.errors.minlength\\\">\\n                                    Senha deve conter mais de 6 letras\\n                                </div>\\n                            </div>\\n\\n                            <button class=\\\"btn btn-block btn-success\\\" [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\">Solicitar acesso</button>\\n\\n                        </form>\\n                    </div>\\n                    <div class=\\\"card-footer p-4\\\">\\n                        <button routerLink=\\\"/login\\\" type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Voltar</button> \\n                        <!-- <div class=\\\"row\\\">\\n                          <div class=\\\"col-6\\\">\\n                            <button class=\\\"btn btn-block btn-facebook\\\" type=\\\"button\\\"><span>facebook</span></button>\\n                          </div>\\n                          <div class=\\\"col-6\\\">\\n                            <button class=\\\"btn btn-block btn-twitter\\\" type=\\\"button\\\"><span>twitter</span></button>\\n                          </div>\\n                        </div> -->\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '@demoiselle/security';\nimport { NotificationService } from '../../core/notification.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  credentials: any = {\n    username: '',\n    password: '',\n    firstName: ''\n  };\n\n  constructor(protected authService: AuthService,\n    protected router: Router,\n    protected notificationService: NotificationService) { }\n\n  ngOnInit() {\n    console.log('[RegisterComponent] initialized.');\n  }\n\n  register() {\n    this.authService.register(this.credentials)\n      .subscribe(\n      res => {\n        this.notificationService.success('Solicitação enviada com sucesso, enviaremos um email para você!');\n      },\n      error => {\n        if (error.status === 401 || error.status === 406) {\n          const errors = error.error;\n          for (const err of errors) {\n            this.notificationService.error(err.error);\n          }\n          this.credentials.password = '';\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { RegisterComponent } from './register.component';\nimport { RegisterRoutingModule } from './register-routing.module';\n\n@NgModule({\n  imports: [\n    SharedModule, RegisterRoutingModule\n  ],\n  declarations: [\n    RegisterComponent\n  ],\n  providers: []\n})\nexport class RegisterModule { }\n"],"sourceRoot":""}