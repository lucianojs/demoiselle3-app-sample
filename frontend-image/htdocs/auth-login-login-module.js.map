{"version":3,"sources":["webpack:///./src/app/auth/login/login-routing.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"auth-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LoginComponent\n      }\n    ])\n  ],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card-group mb-0\\\">\\n                    <div class=\\\"card p-4\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div *ngIf=\\\"showQuickAuth\\\">\\n                                <form id=\\\"form-quick-login\\\" name=\\\"form-quick-login\\\" (ngSubmit)=\\\"autoLogin()\\\" novalidate>\\n                                    <h1>Login</h1>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-12\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"autoLogin()\\\">Acessar</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"showQuickAuth = !showQuickAuth\\\">Outra conta</button>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n                            <div *ngIf=\\\"!showQuickAuth\\\">\\n                                <form id=\\\"form-login\\\" name=\\\"form-login\\\" (ngSubmit)=\\\"login()\\\" novalidate>\\n                                    <h1>Login</h1>\\n                                    <p class=\\\"text-muted\\\">Entre com sua conta</p>\\n                                    <div class=\\\"input-group mb-3\\\">\\n                                        <span class=\\\"input-group-addon\\\">\\n                                            <i class=\\\"icon-user\\\"></i>\\n                                        </span>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" name=\\\"username\\\" autocomplete=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\" required>\\n                                        <span id=\\\"username-message\\\" class=\\\"text-danger\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <span class=\\\"input-group-addon\\\">\\n                                            <i class=\\\"icon-lock\\\"></i>\\n                                        </span>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Senha\\\" name=\\\"password\\\" autocomplete=\\\"current-password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required>\\n                                        <span id=\\\"password-message\\\" class=\\\"text-danger\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-12\\\">\\n                                            <button type=\\\"submit\\\" class=\\\"btn btn-primary px-3\\\">Acessar</button>\\n                                            <a [routerLink]=\\\"'/register'\\\" class=\\\"btn btn-link mx-0 px-1\\\">Registrar</a>\\n                                            <a [routerLink]=\\\"'/amnesia'\\\" class=\\\"btn btn-link mx-0 px-1\\\">Esqueceu a senha?</a>\\n                                        </div>\\n                                    </div>\\n                                    <div id=\\\"message\\\" class=\\\"text-danger\\\"></div>\\n                                    <!--<div>\\n                                      Email:admin@demoiselle.org Senha:123456\\n                                    </div>-->\\n                                </form>\\n                            </div>\\n                            <br>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6 col-lg-3\\\">\\n                                    <button class=\\\"btn btn-facebook\\\" type=\\\"button\\\" (click)=\\\"socialSignIn('facebook')\\\">\\n                                        <span>facebook</span>\\n                                    </button>\\n                                </div>\\n                                <br>\\n                                <div class=\\\"col-sm-6 col-lg-3\\\">\\n                                    <button class=\\\"btn btn-google-plus\\\" type=\\\"button\\\" (click)=\\\"socialSignIn('google')\\\">\\n                                        <span>google</span>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!--<div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n                      <div class=\\\"card-body text-center\\\">\\n                        <div>\\n                          <h2>Registre-se</h2>\\n                          <p>Crie uma conta e tenha acesso ao sistema.</p>\\n                          <button type=\\\"button\\\" [routerLink]=\\\"['/user/edit']\\\" class=\\\"btn btn-primary active mt-3\\\">Cadastrar!</button>-\\n                        </div>\\n                      </div>\\n                    </div>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService, TokenService } from '@demoiselle/security';\nimport { NotificationService } from '../../core/notification.service';\nimport { ServiceWorkerService } from '../../core/sw.service';\nimport { CredentialManagementService } from '../credentials.service';\nimport { WebSocketService } from '../../core/websocket.service';\nimport {\n  AuthService as SocialAuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider\n} from 'angularx-social-login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  user: any = {\n    username: 'admin@demoiselle.org',\n    password: '123456'\n  };\n  supportAutoLogin = false;\n  showQuickAuth = true;\n\n  protected fingerprint;\n\n  constructor(\n    protected socialAuthService: SocialAuthService,\n    protected authService: AuthService,\n    protected router: Router,\n    protected notificationService: NotificationService,\n    protected serviceWorkerService: ServiceWorkerService,\n    protected tokenService: TokenService,\n    protected credentialManagementService: CredentialManagementService,\n    protected webSocketService: WebSocketService\n  ) {}\n\n  ngOnInit() {\n    // tslint:disable-next-line:no-console\n    console.debug('[LoginComponent] initialized.');\n\n    this.credentialManagementService\n      .isCredentialsAvailable()\n      .then(result => {\n        if (result === true) {\n          this.supportAutoLogin = true;\n          this.showQuickAuth = true;\n        }\n      })\n      .catch(err => {\n        this.supportAutoLogin = false;\n        this.showQuickAuth = false;\n      });\n  }\n\n  login() {\n    const payload = {\n      username: this.user.username,\n      password: this.user.password\n    };\n\n    this.loginWithPayload(payload);\n  }\n\n  autoLogin() {\n    this.credentialManagementService\n      .autoSignin()\n      .then(credentials => {\n        const payload = {\n          username: credentials.id,\n          password: credentials.password\n        };\n        this.loginWithPayload(payload);\n      })\n      .catch(err => {\n        console.warn(err);\n        this.showQuickAuth = false;\n      });\n  }\n\n  loginWithPayload(payload) {\n    const subs = this.authService.login(payload).subscribe(\n      result => {\n        // tslint:disable-next-line:no-console\n        console.debug('Login realizado com sucesso!', result);\n        this.notificationService.success('Login realizado com sucesso!');\n        this._sendLoginWebSocket();\n        this.serviceWorkerService.startWebPush();\n        this.credentialManagementService.store(payload);\n      },\n      error => this._showErrors(error),\n      () => {\n        subs.unsubscribe();\n      }\n    );\n  }\n\n  socialSignIn(socialPlatform) {\n    let socialPlatformProvider;\n\n    if (socialPlatform === 'facebook') {\n      socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    } else if (socialPlatform === 'google') {\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n    }\n\n    this.socialAuthService.signIn(socialPlatformProvider).then(social => {\n      const subs = this.authService.social(social).subscribe(\n        result => {\n          // tslint:disable-next-line:no-console\n          console.debug('Login social realizado com sucesso!', result);\n          this.notificationService.success(\n            'Login social realizado com sucesso!'\n          );\n          this._sendLoginWebSocket();\n          this.serviceWorkerService.startWebPush();\n        },\n        error => this._showErrors(error),\n        () => {\n          subs.unsubscribe();\n        }\n      );\n    });\n  }\n\n  private _showErrors(error) {\n    if (error.status === 401 || error.status === 406) {\n      const errors = error.error;\n      for (const err of errors) {\n        this.notificationService.error(err.error);\n      }\n      this.user.password = '';\n    }\n  }\n\n  private _sendLoginWebSocket() {\n    this.webSocketService\n      .connect()\n      .then(wsConnection => {\n        // console.debug('[WS] conectado.');\n        const id = this.tokenService.getIdentityFromToken();\n        wsConnection.send({\n          event: 'login',\n          data: id\n        });\n      })\n      .catch(error => console.error('Erro ao conectar com WebSocket.', error));\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../shared';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LoginRoutingModule\n  ],\n  declarations: [\n    LoginComponent\n  ],\n  providers: []\n})\nexport class LoginModule { }\n"],"sourceRoot":""}